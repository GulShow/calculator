{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { myColors } from \"./src/styles/Colors\";\nimport { ThemeContext } from \"./src/context/ThemeContext\";\nimport MyKeyboard from \"./src/components/MyKeyboard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState('light'),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  return _jsx(ThemeContext.Provider, {\n    value: theme,\n    children: _jsxs(SafeAreaView, {\n      style: theme === 'light' ? styles.container : [styles.container, {\n        backgroundColor: 'black'\n      }],\n      children: [_jsx(Switch, {\n        value: theme === 'dark',\n        onValueChange: function onValueChange() {\n          return setTheme(theme === 'light' ? 'dark' : 'light');\n        }\n      }), _jsx(MyKeyboard, {})]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: myColors.light,\n    alignItems: 'center',\n    justifyContent: 'flex-start'\n  }\n});","map":{"version":3,"names":["useState","myColors","ThemeContext","MyKeyboard","App","theme","setTheme","styles","container","backgroundColor","StyleSheet","create","flex","light","alignItems","justifyContent"],"sources":["/Users/stgulyaev23gmail.com/Documents/Projects/calculator/App.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { SafeAreaView, StyleSheet, Switch, Text } from 'react-native';\nimport { myColors } from './src/styles/Colors';\nimport { ThemeContext } from './src/context/ThemeContext';\nimport MyKeyboard from './src/components/MyKeyboard';\n\n\n\nexport default function App() {\n  const [theme, setTheme] = useState('light');\n  return (\n    <ThemeContext.Provider value={theme}>\n      <SafeAreaView style={theme === 'light' ? styles.container : [styles.container, {backgroundColor: 'black'}]}>\n        <Switch\n          value={theme === 'dark'}\n          onValueChange={() => setTheme(theme === 'light' ? 'dark' : 'light')}\n        />\n        <MyKeyboard />\n      </SafeAreaView>\n    </ThemeContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: myColors.light,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n});\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,QAAT;AACA,SAASC,YAAT;AACA,OAAOC,UAAP;;;AAIA,eAAe,SAASC,GAAT,GAAe;EAC5B,gBAA0BJ,QAAQ,CAAC,OAAD,CAAlC;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EACA,OACE,KAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAED,KAA9B;IAAA,UACE,MAAC,YAAD;MAAc,KAAK,EAAEA,KAAK,KAAK,OAAV,GAAoBE,MAAM,CAACC,SAA3B,GAAuC,CAACD,MAAM,CAACC,SAAR,EAAmB;QAACC,eAAe,EAAE;MAAlB,CAAnB,CAA5D;MAAA,WACE,KAAC,MAAD;QACE,KAAK,EAAEJ,KAAK,KAAK,MADnB;QAEE,aAAa,EAAE;UAAA,OAAMC,QAAQ,CAACD,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAA9B,CAAd;QAAA;MAFjB,EADF,EAKE,KAAC,UAAD,KALF;IAAA;EADF,EADF;AAWD;AAED,IAAME,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CADG;IAETH,eAAe,EAAER,QAAQ,CAACY,KAFjB;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}